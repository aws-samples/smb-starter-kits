# Q Business Starter Kit - here will be my instrutions and readme
#
#
#
AWSTemplateFormatVersion: 2010-09-09
Description: 
  Deploy Amazon Q Business Application with support data.
Parameters:
  S3DataSourceBucket:
    Description: The name of the bucket that contains the data for the data source
    Type: String
  IAMIdentityCenterARN:
    Description: IAM Identity center is prerequisite to configure Q Business. Provide IAM Identity Instance ARN  
    Type: String
  QBusinessApplicationName:
    Description: The name of the Q Business Application
    Type: String
  WebCrawlerDataSourceUrl:
    Description: The URL of the Web Crawler data source
    Type: String
 
Resources:
  QBusinessWebExperienceServiceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
               - application.qbusiness.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
              - 'sts:SetContext'              
            Condition:
              StringEquals: 
                "aws:SourceAccount": !Sub "${AWS::AccountId}"
              ArnLike: 
                "aws:SourceArn": !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref QBusinessWebExperienceServiceManagedPolicy
    DependsOn:
      - QBusinessWebExperienceServiceManagedPolicy         
      
  QBusinessWebExperienceServiceManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:      
      Description: Q Web Experience Managed Policy
      Path: /service-role/
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "QBusinessConversationPermission"
            Effect: Allow
            Action: 
            - "s3:GetObject"
            - "qbusiness:Chat"
            - "qbusiness:ChatSync"
            - "qbusiness:ListMessages"
            - "qbusiness:ListConversations"
            - "qbusiness:DeleteConversation"
            - "qbusiness:PutFeedback"
            - "qbusiness:GetWebExperience"
            - "qbusiness:GetApplication"
            - "qbusiness:ListPlugins"
            - "qbusiness:GetChatControlsConfiguration"              
            Resource: !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
          - Sid: "QBusinessKMSDecryptPermissions"
            Effect: Allow
            Action: "kms:Decrypt"
            Resource: !Sub "arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/key_id"
            Condition:
              StringEquals:
                "kms:ViaService": !Sub "qbusiness:${AWS::Region}:amazonaws.com"
          - Sid: "QBusinessQAppsPermissions"
            Effect: Allow
            Action: 
            -  "qapps:CreateQApp"
            -  "qapps:PredictProblemStatementFromConversation"
            -  "qapps:PredictQAppFromProblemStatement"
            -  "qapps:CopyQApp"
            -  "qapps:GetQApp"
            -  "qapps:ListQApps"
            -  "qapps:UpdateQApp"
            -  "qapps:DeleteQApp"
            -  "qapps:AssociateQAppWithUser"
            -  "qapps:DisassociateQAppFromUser"
            -  "qapps:ImportDocumentToQApp"
            -  "qapps:ImportDocumentToQAppSession"
            -  "qapps:CreateLibraryItem"
            -  "qapps:GetLibraryItem"
            -  "qapps:UpdateLibraryItem"
            -  "qapps:CreateLibraryItemReview"
            -  "qapps:ListLibraryItems"
            -  "qapps:CreateSubscriptionToken"
            -  "qapps:StartQAppSession"
            -  "qapps:StopQAppSession"
            Resource: !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
                 

  QBusinessDataSourceRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service: 
               - qbusiness.amazonaws.com
            Action: 
              - 'sts:AssumeRole'
            Condition:
              StringEquals: 
                "aws:SourceAccount": !Sub "${AWS::AccountId}"
              ArnLike: 
                "aws:SourceArn": !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
      Path: /service-role/
      ManagedPolicyArns:
        - !Ref QBusinessDataSourceManagedPolicy
    DependsOn:
      - QBusinessDataSourceManagedPolicy      

  QBusinessDataSourceManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:      
      Description: Q DataSource Managed Policy
      Path: /service-role/
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowsAmazonQToGetObjectfromS3"
            Effect: Allow
            Action: "s3:GetObject"
            Resource: !Sub "arn:${AWS::Partition}:s3:::${S3DataSourceBucket}/*"
            Condition:
              StringEquals:
                "aws:ResourceAccount": !Sub "${AWS::AccountId}"
          - Sid: "AllowsAmazonQToListS3Buckets"
            Effect: Allow
            Action: "s3:ListBucket"
            Resource: !Sub "arn:${AWS::Partition}:s3:::${S3DataSourceBucket}"
            Condition:
              StringEquals:
                "aws:ResourceAccount": !Sub "${AWS::AccountId}"
          - Sid: "AllowsAmazonQToIngestDocuments"
            Effect: Allow
            Action: 
            - "qbusiness:BatchPutDocument"
            - "qbusiness:BatchDeleteDocument" 
            Resource:
            - !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}/index/${QBusinessIndex.IndexId}"
          - Sid: "AllowsAmazonQToCallMappingAPIs"
            Effect: Allow
            Action:
            - "qbusiness:PutGroup"
            - "qbusiness:CreateUser"
            - "qbusiness:DeleteGroup"
            - "qbusiness:UpdateUser"
            - "qbusiness:ListGroups"
            Resource:
            - !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}"
            - !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}/index/${QBusinessIndex.IndexId}"
            - !Sub "arn:${AWS::Partition}:qbusiness:${AWS::Region}:${AWS::AccountId}:application/${QBusinessApp.ApplicationId}/index/${QBusinessIndex.IndexId}/data-source/*"
                 
  QBusinessApp:
    Type: AWS::QBusiness::Application
    DeletionPolicy: Delete
    Properties:
      DisplayName: !Ref QBusinessApplicationName
      Description: Q Support Insights
      IdentityCenterInstanceArn: !Ref IAMIdentityCenterARN
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/qbusiness.amazonaws.com/AWSServiceRoleForQBusiness

  QBusinessIndex:
    Type: AWS::QBusiness::Index
    Properties:
     ApplicationId: !GetAtt  QBusinessApp.ApplicationId
     DisplayName: qci-insights-index

  QBusinessRetriver:
    Type: AWS::QBusiness::Retriever
    Properties:
     ApplicationId: !GetAtt  QBusinessApp.ApplicationId
     Configuration:
      NativeIndexConfiguration:
        IndexId: !GetAtt QBusinessIndex.IndexId
     DisplayName: qci-insights-index
     Type: NATIVE_INDEX

  QBusinessWebExperience:
    Type: AWS::QBusiness::WebExperience
    Properties:
     ApplicationId: !GetAtt  QBusinessApp.ApplicationId
     RoleArn: !GetAtt QBusinessWebExperienceServiceRole.Arn
     Title: Q Support Insights 
  
  QBusinessDataSource:
    Type: AWS::QBusiness::DataSource
    DeletionPolicy: Delete
    Properties:
     ApplicationId: !GetAtt QBusinessApp.ApplicationId
     Configuration:
        type: "S3"
        version: "1.0.0"
        syncMode: "FORCED_FULL_CRAWL"
        additionalProperties:
          inclusionPrefixes:
            - ""
        connectionConfiguration:
          repositoryEndpointMetadata:
            BucketName: !Ref S3DataSourceBucket
        repositoryConfigurations:
          document:
            fieldMappings:
              - dataSourceFieldName: "s3_document_id"
                indexFieldName: "s3_document_id"
                indexFieldType: "STRING"      
     DisplayName: s3-datasource
     SyncSchedule: 'cron(0 0 * * ? *)'
     IndexId: !GetAtt QBusinessIndex.IndexId
     RoleArn: !GetAtt QBusinessDataSourceRole.Arn
      
  QBusinessWebCrawlerDataSource:
    Type: AWS::QBusiness::DataSource
    DeletionPolicy: Delete
    Properties:
      ApplicationId: !GetAtt QBusinessApp.ApplicationId
      Configuration:
          type: WEBCRAWLER
          version: "1.0.0"
          syncMode: "FORCED_FULL_CRAWL"
          connectionConfiguration:
            repositoryEndpointMetadata:
              seedUrlConnections:
                - {seedUrl: !Ref WebCrawlerDataSourceUrl}
          repositoryConfigurations:
            webPage:
              fieldMappings:
                - dataSourceFieldName: "webs_id"
                  indexFieldName: "webs_id"
                  indexFieldType: "LONG"
          additionalProperties:
            rateLimit: 300
            maxFileSize: 50
            crawlDepth: 0
            crawlSubDomain: false
            crawlAllDomain: false
            maxLinksPerUrl: 1
            honorRobots: false    
      Description: webpage-datasource
      DisplayName: webpage-datasource
      IndexId: !GetAtt QBusinessIndex.IndexId
      RoleArn: !GetAtt QBusinessDataSourceRole.Arn

  

  